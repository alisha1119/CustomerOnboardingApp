// <auto-generated />
using System;
using CustomerOnboardingApp.Data;
using CustomerOnboardingApp.Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CustomerOnboardingApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgBusinessActivity", b =>
                {
                    b.Property<int>("BusinessActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessActivityId"));

                    b.Property<string>("BusinessActivityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BusinessActivityId")
                        .HasName("PK__CFG_Busi__50EF702EAFEA41F2");

                    b.ToTable("CFG_BusinessActivity", (string)null);
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgCountry", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CountryId")
                        .HasName("PK__CFG_Coun__10D1609F190F62A7");

                    b.ToTable("CFG_Country", (string)null);
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgMainPurpose", b =>
                {
                    b.Property<int>("MainPurposeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MainPurposeId"));

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MainPurposeId")
                        .HasName("PK__CFG_Main__B0AB6E77CF0C9F1E");

                    b.ToTable("CFG_MainPurpose", (string)null);
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgTypeOfEntity", b =>
                {
                    b.Property<int>("TypeOfEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeOfEntityId"));

                    b.Property<string>("EntityTypeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TypeOfEntityId")
                        .HasName("PK__CFG_Type__F73E57A0400C4BCC");

                    b.ToTable("CFG_TypeOfEntity", (string)null);
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.TblCustomer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<int>("BusinessActivityId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("DateOfIncorporation")
                        .HasColumnType("date");

                    b.Property<string>("DesignatedApplicantFirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DesignatedApplicantLastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("DesignatedApplicantTitle")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LicenseRequirement")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("MainPurposeId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TypeOfEntityId")
                        .HasColumnType("int");

                    b.HasKey("CustomerId")
                        .HasName("PK__Tbl_Cust__A4AE64D8820A2F12");

                    b.HasIndex("BusinessActivityId");

                    b.HasIndex("CountryId");

                    b.HasIndex("MainPurposeId");

                    b.HasIndex("TypeOfEntityId");

                    b.ToTable("Tbl_Customer", (string)null);
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.TblDirectorShareholder", b =>
                {
                    b.Property<int>("DirectorShareholderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectorShareholderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DirectorShareholderId")
                        .HasName("PK__Tbl_Dire__46CA5EACC161E26F");

                    b.HasIndex("CustomerId");

                    b.ToTable("Tbl_DirectorShareholder", (string)null);
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.TblCustomer", b =>
                {
                    b.HasOne("CustomerOnboardingApp.Data.Models.CfgBusinessActivity", "BusinessActivity")
                        .WithMany("TblCustomers")
                        .HasForeignKey("BusinessActivityId")
                        .IsRequired()
                        .HasConstraintName("FK_BusinessActivity");

                    b.HasOne("CustomerOnboardingApp.Data.Models.CfgCountry", "Country")
                        .WithMany("TblCustomers")
                        .HasForeignKey("CountryId")
                        .IsRequired()
                        .HasConstraintName("FK_Country");

                    b.HasOne("CustomerOnboardingApp.Data.Models.CfgMainPurpose", "MainPurpose")
                        .WithMany("TblCustomers")
                        .HasForeignKey("MainPurposeId")
                        .IsRequired()
                        .HasConstraintName("FK_MainPurpose");

                    b.HasOne("CustomerOnboardingApp.Data.Models.CfgTypeOfEntity", "TypeOfEntity")
                        .WithMany("TblCustomers")
                        .HasForeignKey("TypeOfEntityId")
                        .IsRequired()
                        .HasConstraintName("FK_TypeOfEntity");

                    b.Navigation("BusinessActivity");

                    b.Navigation("Country");

                    b.Navigation("MainPurpose");

                    b.Navigation("TypeOfEntity");
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.TblDirectorShareholder", b =>
                {
                    b.HasOne("CustomerOnboardingApp.Data.Models.TblCustomer", "Customer")
                        .WithMany("TblDirectorShareholders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_Customer_DirectorShareholder");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgBusinessActivity", b =>
                {
                    b.Navigation("TblCustomers");
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgCountry", b =>
                {
                    b.Navigation("TblCustomers");
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgMainPurpose", b =>
                {
                    b.Navigation("TblCustomers");
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.CfgTypeOfEntity", b =>
                {
                    b.Navigation("TblCustomers");
                });

            modelBuilder.Entity("CustomerOnboardingApp.Data.Models.TblCustomer", b =>
                {
                    b.Navigation("TblDirectorShareholders");
                });
#pragma warning restore 612, 618
        }
    }
}
